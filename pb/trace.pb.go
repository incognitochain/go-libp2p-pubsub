// Code generated by protoc-gen-go. DO NOT EDIT.
// source: trace.proto

package pubsub_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TraceEvent_Type int32

const (
	TraceEvent_PUBLISH_MESSAGE   TraceEvent_Type = 0
	TraceEvent_REJECT_MESSAGE    TraceEvent_Type = 1
	TraceEvent_DUPLICATE_MESSAGE TraceEvent_Type = 2
	TraceEvent_DELIVER_MESSAGE   TraceEvent_Type = 3
	TraceEvent_ADD_PEER          TraceEvent_Type = 4
	TraceEvent_REMOVE_PEER       TraceEvent_Type = 5
	TraceEvent_RECV_RPC          TraceEvent_Type = 6
	TraceEvent_SEND_RPC          TraceEvent_Type = 7
	TraceEvent_DROP_RPC          TraceEvent_Type = 8
	TraceEvent_JOIN              TraceEvent_Type = 9
	TraceEvent_LEAVE             TraceEvent_Type = 10
	TraceEvent_GRAFT             TraceEvent_Type = 11
	TraceEvent_PRUNE             TraceEvent_Type = 12
)

var TraceEvent_Type_name = map[int32]string{
	0:  "PUBLISH_MESSAGE",
	1:  "REJECT_MESSAGE",
	2:  "DUPLICATE_MESSAGE",
	3:  "DELIVER_MESSAGE",
	4:  "ADD_PEER",
	5:  "REMOVE_PEER",
	6:  "RECV_RPC",
	7:  "SEND_RPC",
	8:  "DROP_RPC",
	9:  "JOIN",
	10: "LEAVE",
	11: "GRAFT",
	12: "PRUNE",
}

var TraceEvent_Type_value = map[string]int32{
	"PUBLISH_MESSAGE":   0,
	"REJECT_MESSAGE":    1,
	"DUPLICATE_MESSAGE": 2,
	"DELIVER_MESSAGE":   3,
	"ADD_PEER":          4,
	"REMOVE_PEER":       5,
	"RECV_RPC":          6,
	"SEND_RPC":          7,
	"DROP_RPC":          8,
	"JOIN":              9,
	"LEAVE":             10,
	"GRAFT":             11,
	"PRUNE":             12,
}

func (x TraceEvent_Type) Enum() *TraceEvent_Type {
	p := new(TraceEvent_Type)
	*p = x
	return p
}

func (x TraceEvent_Type) String() string {
	return proto.EnumName(TraceEvent_Type_name, int32(x))
}

func (x *TraceEvent_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TraceEvent_Type_value, data, "TraceEvent_Type")
	if err != nil {
		return err
	}
	*x = TraceEvent_Type(value)
	return nil
}

func (TraceEvent_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 0}
}

type TraceEvent struct {
	Type                 *TraceEvent_Type             `protobuf:"varint,1,opt,name=type,enum=pubsub.pb.TraceEvent_Type" json:"type,omitempty"`
	PeerID               []byte                       `protobuf:"bytes,2,opt,name=peerID" json:"peerID,omitempty"`
	Timestamp            *int64                       `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	PublishMessage       *TraceEvent_PublishMessage   `protobuf:"bytes,4,opt,name=publishMessage" json:"publishMessage,omitempty"`
	RejectMessage        *TraceEvent_RejectMessage    `protobuf:"bytes,5,opt,name=rejectMessage" json:"rejectMessage,omitempty"`
	DuplicateMessage     *TraceEvent_DuplicateMessage `protobuf:"bytes,6,opt,name=duplicateMessage" json:"duplicateMessage,omitempty"`
	DeliverMessage       *TraceEvent_DeliverMessage   `protobuf:"bytes,7,opt,name=deliverMessage" json:"deliverMessage,omitempty"`
	AddPeer              *TraceEvent_AddPeer          `protobuf:"bytes,8,opt,name=addPeer" json:"addPeer,omitempty"`
	RemovePeer           *TraceEvent_RemovePeer       `protobuf:"bytes,9,opt,name=removePeer" json:"removePeer,omitempty"`
	RecvRPC              *TraceEvent_RecvRPC          `protobuf:"bytes,10,opt,name=recvRPC" json:"recvRPC,omitempty"`
	SendRPC              *TraceEvent_SendRPC          `protobuf:"bytes,11,opt,name=sendRPC" json:"sendRPC,omitempty"`
	DropRPC              *TraceEvent_DropRPC          `protobuf:"bytes,12,opt,name=dropRPC" json:"dropRPC,omitempty"`
	Join                 *TraceEvent_Join             `protobuf:"bytes,13,opt,name=join" json:"join,omitempty"`
	Leave                *TraceEvent_Leave            `protobuf:"bytes,14,opt,name=leave" json:"leave,omitempty"`
	Graft                *TraceEvent_Graft            `protobuf:"bytes,15,opt,name=graft" json:"graft,omitempty"`
	Prune                *TraceEvent_Prune            `protobuf:"bytes,16,opt,name=prune" json:"prune,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *TraceEvent) Reset()         { *m = TraceEvent{} }
func (m *TraceEvent) String() string { return proto.CompactTextString(m) }
func (*TraceEvent) ProtoMessage()    {}
func (*TraceEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0}
}

func (m *TraceEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent.Unmarshal(m, b)
}
func (m *TraceEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent.Marshal(b, m, deterministic)
}
func (m *TraceEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent.Merge(m, src)
}
func (m *TraceEvent) XXX_Size() int {
	return xxx_messageInfo_TraceEvent.Size(m)
}
func (m *TraceEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent proto.InternalMessageInfo

func (m *TraceEvent) GetType() TraceEvent_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return TraceEvent_PUBLISH_MESSAGE
}

func (m *TraceEvent) GetPeerID() []byte {
	if m != nil {
		return m.PeerID
	}
	return nil
}

func (m *TraceEvent) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *TraceEvent) GetPublishMessage() *TraceEvent_PublishMessage {
	if m != nil {
		return m.PublishMessage
	}
	return nil
}

func (m *TraceEvent) GetRejectMessage() *TraceEvent_RejectMessage {
	if m != nil {
		return m.RejectMessage
	}
	return nil
}

func (m *TraceEvent) GetDuplicateMessage() *TraceEvent_DuplicateMessage {
	if m != nil {
		return m.DuplicateMessage
	}
	return nil
}

func (m *TraceEvent) GetDeliverMessage() *TraceEvent_DeliverMessage {
	if m != nil {
		return m.DeliverMessage
	}
	return nil
}

func (m *TraceEvent) GetAddPeer() *TraceEvent_AddPeer {
	if m != nil {
		return m.AddPeer
	}
	return nil
}

func (m *TraceEvent) GetRemovePeer() *TraceEvent_RemovePeer {
	if m != nil {
		return m.RemovePeer
	}
	return nil
}

func (m *TraceEvent) GetRecvRPC() *TraceEvent_RecvRPC {
	if m != nil {
		return m.RecvRPC
	}
	return nil
}

func (m *TraceEvent) GetSendRPC() *TraceEvent_SendRPC {
	if m != nil {
		return m.SendRPC
	}
	return nil
}

func (m *TraceEvent) GetDropRPC() *TraceEvent_DropRPC {
	if m != nil {
		return m.DropRPC
	}
	return nil
}

func (m *TraceEvent) GetJoin() *TraceEvent_Join {
	if m != nil {
		return m.Join
	}
	return nil
}

func (m *TraceEvent) GetLeave() *TraceEvent_Leave {
	if m != nil {
		return m.Leave
	}
	return nil
}

func (m *TraceEvent) GetGraft() *TraceEvent_Graft {
	if m != nil {
		return m.Graft
	}
	return nil
}

func (m *TraceEvent) GetPrune() *TraceEvent_Prune {
	if m != nil {
		return m.Prune
	}
	return nil
}

type TraceEvent_PublishMessage struct {
	MessageID            []byte   `protobuf:"bytes,1,opt,name=messageID" json:"messageID,omitempty"`
	Topics               []string `protobuf:"bytes,2,rep,name=topics" json:"topics,omitempty"`
	MsgSize              *int64   `protobuf:"varint,3,req,name=msgSize" json:"msgSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceEvent_PublishMessage) Reset()         { *m = TraceEvent_PublishMessage{} }
func (m *TraceEvent_PublishMessage) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_PublishMessage) ProtoMessage()    {}
func (*TraceEvent_PublishMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 0}
}

func (m *TraceEvent_PublishMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_PublishMessage.Unmarshal(m, b)
}
func (m *TraceEvent_PublishMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_PublishMessage.Marshal(b, m, deterministic)
}
func (m *TraceEvent_PublishMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_PublishMessage.Merge(m, src)
}
func (m *TraceEvent_PublishMessage) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_PublishMessage.Size(m)
}
func (m *TraceEvent_PublishMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_PublishMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_PublishMessage proto.InternalMessageInfo

func (m *TraceEvent_PublishMessage) GetMessageID() []byte {
	if m != nil {
		return m.MessageID
	}
	return nil
}

func (m *TraceEvent_PublishMessage) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *TraceEvent_PublishMessage) GetMsgSize() int64 {
	if m != nil && m.MsgSize != nil {
		return *m.MsgSize
	}
	return 0
}

type TraceEvent_RejectMessage struct {
	MessageID            []byte   `protobuf:"bytes,1,opt,name=messageID" json:"messageID,omitempty"`
	ReceivedFrom         []byte   `protobuf:"bytes,2,opt,name=receivedFrom" json:"receivedFrom,omitempty"`
	Reason               *string  `protobuf:"bytes,3,opt,name=reason" json:"reason,omitempty"`
	Topics               []string `protobuf:"bytes,4,rep,name=topics" json:"topics,omitempty"`
	MsgSize              *int64   `protobuf:"varint,5,req,name=msgSize" json:"msgSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceEvent_RejectMessage) Reset()         { *m = TraceEvent_RejectMessage{} }
func (m *TraceEvent_RejectMessage) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_RejectMessage) ProtoMessage()    {}
func (*TraceEvent_RejectMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 1}
}

func (m *TraceEvent_RejectMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_RejectMessage.Unmarshal(m, b)
}
func (m *TraceEvent_RejectMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_RejectMessage.Marshal(b, m, deterministic)
}
func (m *TraceEvent_RejectMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_RejectMessage.Merge(m, src)
}
func (m *TraceEvent_RejectMessage) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_RejectMessage.Size(m)
}
func (m *TraceEvent_RejectMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_RejectMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_RejectMessage proto.InternalMessageInfo

func (m *TraceEvent_RejectMessage) GetMessageID() []byte {
	if m != nil {
		return m.MessageID
	}
	return nil
}

func (m *TraceEvent_RejectMessage) GetReceivedFrom() []byte {
	if m != nil {
		return m.ReceivedFrom
	}
	return nil
}

func (m *TraceEvent_RejectMessage) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

func (m *TraceEvent_RejectMessage) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *TraceEvent_RejectMessage) GetMsgSize() int64 {
	if m != nil && m.MsgSize != nil {
		return *m.MsgSize
	}
	return 0
}

type TraceEvent_DuplicateMessage struct {
	MessageID            []byte   `protobuf:"bytes,1,opt,name=messageID" json:"messageID,omitempty"`
	ReceivedFrom         []byte   `protobuf:"bytes,2,opt,name=receivedFrom" json:"receivedFrom,omitempty"`
	Topics               []string `protobuf:"bytes,3,rep,name=topics" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceEvent_DuplicateMessage) Reset()         { *m = TraceEvent_DuplicateMessage{} }
func (m *TraceEvent_DuplicateMessage) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_DuplicateMessage) ProtoMessage()    {}
func (*TraceEvent_DuplicateMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 2}
}

func (m *TraceEvent_DuplicateMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_DuplicateMessage.Unmarshal(m, b)
}
func (m *TraceEvent_DuplicateMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_DuplicateMessage.Marshal(b, m, deterministic)
}
func (m *TraceEvent_DuplicateMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_DuplicateMessage.Merge(m, src)
}
func (m *TraceEvent_DuplicateMessage) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_DuplicateMessage.Size(m)
}
func (m *TraceEvent_DuplicateMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_DuplicateMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_DuplicateMessage proto.InternalMessageInfo

func (m *TraceEvent_DuplicateMessage) GetMessageID() []byte {
	if m != nil {
		return m.MessageID
	}
	return nil
}

func (m *TraceEvent_DuplicateMessage) GetReceivedFrom() []byte {
	if m != nil {
		return m.ReceivedFrom
	}
	return nil
}

func (m *TraceEvent_DuplicateMessage) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

type TraceEvent_DeliverMessage struct {
	MessageID            []byte   `protobuf:"bytes,1,opt,name=messageID" json:"messageID,omitempty"`
	Topics               []string `protobuf:"bytes,2,rep,name=topics" json:"topics,omitempty"`
	MsgSize              *int64   `protobuf:"varint,3,req,name=msgSize" json:"msgSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceEvent_DeliverMessage) Reset()         { *m = TraceEvent_DeliverMessage{} }
func (m *TraceEvent_DeliverMessage) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_DeliverMessage) ProtoMessage()    {}
func (*TraceEvent_DeliverMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 3}
}

func (m *TraceEvent_DeliverMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_DeliverMessage.Unmarshal(m, b)
}
func (m *TraceEvent_DeliverMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_DeliverMessage.Marshal(b, m, deterministic)
}
func (m *TraceEvent_DeliverMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_DeliverMessage.Merge(m, src)
}
func (m *TraceEvent_DeliverMessage) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_DeliverMessage.Size(m)
}
func (m *TraceEvent_DeliverMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_DeliverMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_DeliverMessage proto.InternalMessageInfo

func (m *TraceEvent_DeliverMessage) GetMessageID() []byte {
	if m != nil {
		return m.MessageID
	}
	return nil
}

func (m *TraceEvent_DeliverMessage) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *TraceEvent_DeliverMessage) GetMsgSize() int64 {
	if m != nil && m.MsgSize != nil {
		return *m.MsgSize
	}
	return 0
}

type TraceEvent_AddPeer struct {
	PeerID               []byte   `protobuf:"bytes,1,opt,name=peerID" json:"peerID,omitempty"`
	Proto                *string  `protobuf:"bytes,2,opt,name=proto" json:"proto,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceEvent_AddPeer) Reset()         { *m = TraceEvent_AddPeer{} }
func (m *TraceEvent_AddPeer) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_AddPeer) ProtoMessage()    {}
func (*TraceEvent_AddPeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 4}
}

func (m *TraceEvent_AddPeer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_AddPeer.Unmarshal(m, b)
}
func (m *TraceEvent_AddPeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_AddPeer.Marshal(b, m, deterministic)
}
func (m *TraceEvent_AddPeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_AddPeer.Merge(m, src)
}
func (m *TraceEvent_AddPeer) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_AddPeer.Size(m)
}
func (m *TraceEvent_AddPeer) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_AddPeer.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_AddPeer proto.InternalMessageInfo

func (m *TraceEvent_AddPeer) GetPeerID() []byte {
	if m != nil {
		return m.PeerID
	}
	return nil
}

func (m *TraceEvent_AddPeer) GetProto() string {
	if m != nil && m.Proto != nil {
		return *m.Proto
	}
	return ""
}

type TraceEvent_RemovePeer struct {
	PeerID               []byte   `protobuf:"bytes,1,opt,name=peerID" json:"peerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceEvent_RemovePeer) Reset()         { *m = TraceEvent_RemovePeer{} }
func (m *TraceEvent_RemovePeer) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_RemovePeer) ProtoMessage()    {}
func (*TraceEvent_RemovePeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 5}
}

func (m *TraceEvent_RemovePeer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_RemovePeer.Unmarshal(m, b)
}
func (m *TraceEvent_RemovePeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_RemovePeer.Marshal(b, m, deterministic)
}
func (m *TraceEvent_RemovePeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_RemovePeer.Merge(m, src)
}
func (m *TraceEvent_RemovePeer) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_RemovePeer.Size(m)
}
func (m *TraceEvent_RemovePeer) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_RemovePeer.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_RemovePeer proto.InternalMessageInfo

func (m *TraceEvent_RemovePeer) GetPeerID() []byte {
	if m != nil {
		return m.PeerID
	}
	return nil
}

type TraceEvent_RecvRPC struct {
	ReceivedFrom         []byte              `protobuf:"bytes,1,opt,name=receivedFrom" json:"receivedFrom,omitempty"`
	Meta                 *TraceEvent_RPCMeta `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	MsgSize              *int64              `protobuf:"varint,3,req,name=msgSize" json:"msgSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TraceEvent_RecvRPC) Reset()         { *m = TraceEvent_RecvRPC{} }
func (m *TraceEvent_RecvRPC) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_RecvRPC) ProtoMessage()    {}
func (*TraceEvent_RecvRPC) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 6}
}

func (m *TraceEvent_RecvRPC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_RecvRPC.Unmarshal(m, b)
}
func (m *TraceEvent_RecvRPC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_RecvRPC.Marshal(b, m, deterministic)
}
func (m *TraceEvent_RecvRPC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_RecvRPC.Merge(m, src)
}
func (m *TraceEvent_RecvRPC) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_RecvRPC.Size(m)
}
func (m *TraceEvent_RecvRPC) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_RecvRPC.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_RecvRPC proto.InternalMessageInfo

func (m *TraceEvent_RecvRPC) GetReceivedFrom() []byte {
	if m != nil {
		return m.ReceivedFrom
	}
	return nil
}

func (m *TraceEvent_RecvRPC) GetMeta() *TraceEvent_RPCMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *TraceEvent_RecvRPC) GetMsgSize() int64 {
	if m != nil && m.MsgSize != nil {
		return *m.MsgSize
	}
	return 0
}

type TraceEvent_SendRPC struct {
	SendTo               []byte              `protobuf:"bytes,1,opt,name=sendTo" json:"sendTo,omitempty"`
	Meta                 *TraceEvent_RPCMeta `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	MsgSize              *int64              `protobuf:"varint,3,req,name=msgSize" json:"msgSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TraceEvent_SendRPC) Reset()         { *m = TraceEvent_SendRPC{} }
func (m *TraceEvent_SendRPC) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_SendRPC) ProtoMessage()    {}
func (*TraceEvent_SendRPC) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 7}
}

func (m *TraceEvent_SendRPC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_SendRPC.Unmarshal(m, b)
}
func (m *TraceEvent_SendRPC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_SendRPC.Marshal(b, m, deterministic)
}
func (m *TraceEvent_SendRPC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_SendRPC.Merge(m, src)
}
func (m *TraceEvent_SendRPC) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_SendRPC.Size(m)
}
func (m *TraceEvent_SendRPC) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_SendRPC.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_SendRPC proto.InternalMessageInfo

func (m *TraceEvent_SendRPC) GetSendTo() []byte {
	if m != nil {
		return m.SendTo
	}
	return nil
}

func (m *TraceEvent_SendRPC) GetMeta() *TraceEvent_RPCMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *TraceEvent_SendRPC) GetMsgSize() int64 {
	if m != nil && m.MsgSize != nil {
		return *m.MsgSize
	}
	return 0
}

type TraceEvent_DropRPC struct {
	SendTo               []byte              `protobuf:"bytes,1,opt,name=sendTo" json:"sendTo,omitempty"`
	Meta                 *TraceEvent_RPCMeta `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	MsgSize              *int64              `protobuf:"varint,3,req,name=msgSize" json:"msgSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TraceEvent_DropRPC) Reset()         { *m = TraceEvent_DropRPC{} }
func (m *TraceEvent_DropRPC) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_DropRPC) ProtoMessage()    {}
func (*TraceEvent_DropRPC) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 8}
}

func (m *TraceEvent_DropRPC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_DropRPC.Unmarshal(m, b)
}
func (m *TraceEvent_DropRPC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_DropRPC.Marshal(b, m, deterministic)
}
func (m *TraceEvent_DropRPC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_DropRPC.Merge(m, src)
}
func (m *TraceEvent_DropRPC) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_DropRPC.Size(m)
}
func (m *TraceEvent_DropRPC) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_DropRPC.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_DropRPC proto.InternalMessageInfo

func (m *TraceEvent_DropRPC) GetSendTo() []byte {
	if m != nil {
		return m.SendTo
	}
	return nil
}

func (m *TraceEvent_DropRPC) GetMeta() *TraceEvent_RPCMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *TraceEvent_DropRPC) GetMsgSize() int64 {
	if m != nil && m.MsgSize != nil {
		return *m.MsgSize
	}
	return 0
}

type TraceEvent_Join struct {
	Topic                *string  `protobuf:"bytes,1,opt,name=topic" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceEvent_Join) Reset()         { *m = TraceEvent_Join{} }
func (m *TraceEvent_Join) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_Join) ProtoMessage()    {}
func (*TraceEvent_Join) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 9}
}

func (m *TraceEvent_Join) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_Join.Unmarshal(m, b)
}
func (m *TraceEvent_Join) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_Join.Marshal(b, m, deterministic)
}
func (m *TraceEvent_Join) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_Join.Merge(m, src)
}
func (m *TraceEvent_Join) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_Join.Size(m)
}
func (m *TraceEvent_Join) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_Join.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_Join proto.InternalMessageInfo

func (m *TraceEvent_Join) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

type TraceEvent_Leave struct {
	Topic                *string  `protobuf:"bytes,2,opt,name=topic" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceEvent_Leave) Reset()         { *m = TraceEvent_Leave{} }
func (m *TraceEvent_Leave) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_Leave) ProtoMessage()    {}
func (*TraceEvent_Leave) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 10}
}

func (m *TraceEvent_Leave) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_Leave.Unmarshal(m, b)
}
func (m *TraceEvent_Leave) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_Leave.Marshal(b, m, deterministic)
}
func (m *TraceEvent_Leave) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_Leave.Merge(m, src)
}
func (m *TraceEvent_Leave) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_Leave.Size(m)
}
func (m *TraceEvent_Leave) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_Leave.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_Leave proto.InternalMessageInfo

func (m *TraceEvent_Leave) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

type TraceEvent_Graft struct {
	PeerID               []byte   `protobuf:"bytes,1,opt,name=peerID" json:"peerID,omitempty"`
	Topic                *string  `protobuf:"bytes,2,opt,name=topic" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceEvent_Graft) Reset()         { *m = TraceEvent_Graft{} }
func (m *TraceEvent_Graft) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_Graft) ProtoMessage()    {}
func (*TraceEvent_Graft) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 11}
}

func (m *TraceEvent_Graft) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_Graft.Unmarshal(m, b)
}
func (m *TraceEvent_Graft) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_Graft.Marshal(b, m, deterministic)
}
func (m *TraceEvent_Graft) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_Graft.Merge(m, src)
}
func (m *TraceEvent_Graft) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_Graft.Size(m)
}
func (m *TraceEvent_Graft) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_Graft.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_Graft proto.InternalMessageInfo

func (m *TraceEvent_Graft) GetPeerID() []byte {
	if m != nil {
		return m.PeerID
	}
	return nil
}

func (m *TraceEvent_Graft) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

type TraceEvent_Prune struct {
	PeerID               []byte   `protobuf:"bytes,1,opt,name=peerID" json:"peerID,omitempty"`
	Topic                *string  `protobuf:"bytes,2,opt,name=topic" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceEvent_Prune) Reset()         { *m = TraceEvent_Prune{} }
func (m *TraceEvent_Prune) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_Prune) ProtoMessage()    {}
func (*TraceEvent_Prune) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 12}
}

func (m *TraceEvent_Prune) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_Prune.Unmarshal(m, b)
}
func (m *TraceEvent_Prune) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_Prune.Marshal(b, m, deterministic)
}
func (m *TraceEvent_Prune) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_Prune.Merge(m, src)
}
func (m *TraceEvent_Prune) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_Prune.Size(m)
}
func (m *TraceEvent_Prune) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_Prune.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_Prune proto.InternalMessageInfo

func (m *TraceEvent_Prune) GetPeerID() []byte {
	if m != nil {
		return m.PeerID
	}
	return nil
}

func (m *TraceEvent_Prune) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

type TraceEvent_RPCMeta struct {
	Messages             []*TraceEvent_MessageMeta `protobuf:"bytes,1,rep,name=messages" json:"messages,omitempty"`
	Subscription         []*TraceEvent_SubMeta     `protobuf:"bytes,2,rep,name=subscription" json:"subscription,omitempty"`
	Control              *TraceEvent_ControlMeta   `protobuf:"bytes,3,opt,name=control" json:"control,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *TraceEvent_RPCMeta) Reset()         { *m = TraceEvent_RPCMeta{} }
func (m *TraceEvent_RPCMeta) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_RPCMeta) ProtoMessage()    {}
func (*TraceEvent_RPCMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 13}
}

func (m *TraceEvent_RPCMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_RPCMeta.Unmarshal(m, b)
}
func (m *TraceEvent_RPCMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_RPCMeta.Marshal(b, m, deterministic)
}
func (m *TraceEvent_RPCMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_RPCMeta.Merge(m, src)
}
func (m *TraceEvent_RPCMeta) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_RPCMeta.Size(m)
}
func (m *TraceEvent_RPCMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_RPCMeta.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_RPCMeta proto.InternalMessageInfo

func (m *TraceEvent_RPCMeta) GetMessages() []*TraceEvent_MessageMeta {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *TraceEvent_RPCMeta) GetSubscription() []*TraceEvent_SubMeta {
	if m != nil {
		return m.Subscription
	}
	return nil
}

func (m *TraceEvent_RPCMeta) GetControl() *TraceEvent_ControlMeta {
	if m != nil {
		return m.Control
	}
	return nil
}

type TraceEvent_MessageMeta struct {
	MessageID            []byte   `protobuf:"bytes,1,opt,name=messageID" json:"messageID,omitempty"`
	Topics               []string `protobuf:"bytes,2,rep,name=topics" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceEvent_MessageMeta) Reset()         { *m = TraceEvent_MessageMeta{} }
func (m *TraceEvent_MessageMeta) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_MessageMeta) ProtoMessage()    {}
func (*TraceEvent_MessageMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 14}
}

func (m *TraceEvent_MessageMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_MessageMeta.Unmarshal(m, b)
}
func (m *TraceEvent_MessageMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_MessageMeta.Marshal(b, m, deterministic)
}
func (m *TraceEvent_MessageMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_MessageMeta.Merge(m, src)
}
func (m *TraceEvent_MessageMeta) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_MessageMeta.Size(m)
}
func (m *TraceEvent_MessageMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_MessageMeta.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_MessageMeta proto.InternalMessageInfo

func (m *TraceEvent_MessageMeta) GetMessageID() []byte {
	if m != nil {
		return m.MessageID
	}
	return nil
}

func (m *TraceEvent_MessageMeta) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

type TraceEvent_SubMeta struct {
	Subscribe            *bool    `protobuf:"varint,1,opt,name=subscribe" json:"subscribe,omitempty"`
	Topic                *string  `protobuf:"bytes,2,opt,name=topic" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceEvent_SubMeta) Reset()         { *m = TraceEvent_SubMeta{} }
func (m *TraceEvent_SubMeta) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_SubMeta) ProtoMessage()    {}
func (*TraceEvent_SubMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 15}
}

func (m *TraceEvent_SubMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_SubMeta.Unmarshal(m, b)
}
func (m *TraceEvent_SubMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_SubMeta.Marshal(b, m, deterministic)
}
func (m *TraceEvent_SubMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_SubMeta.Merge(m, src)
}
func (m *TraceEvent_SubMeta) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_SubMeta.Size(m)
}
func (m *TraceEvent_SubMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_SubMeta.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_SubMeta proto.InternalMessageInfo

func (m *TraceEvent_SubMeta) GetSubscribe() bool {
	if m != nil && m.Subscribe != nil {
		return *m.Subscribe
	}
	return false
}

func (m *TraceEvent_SubMeta) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

type TraceEvent_ControlMeta struct {
	Ihave                []*TraceEvent_ControlIHaveMeta `protobuf:"bytes,1,rep,name=ihave" json:"ihave,omitempty"`
	Iwant                []*TraceEvent_ControlIWantMeta `protobuf:"bytes,2,rep,name=iwant" json:"iwant,omitempty"`
	Graft                []*TraceEvent_ControlGraftMeta `protobuf:"bytes,3,rep,name=graft" json:"graft,omitempty"`
	Prune                []*TraceEvent_ControlPruneMeta `protobuf:"bytes,4,rep,name=prune" json:"prune,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *TraceEvent_ControlMeta) Reset()         { *m = TraceEvent_ControlMeta{} }
func (m *TraceEvent_ControlMeta) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_ControlMeta) ProtoMessage()    {}
func (*TraceEvent_ControlMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 16}
}

func (m *TraceEvent_ControlMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_ControlMeta.Unmarshal(m, b)
}
func (m *TraceEvent_ControlMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_ControlMeta.Marshal(b, m, deterministic)
}
func (m *TraceEvent_ControlMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_ControlMeta.Merge(m, src)
}
func (m *TraceEvent_ControlMeta) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_ControlMeta.Size(m)
}
func (m *TraceEvent_ControlMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_ControlMeta.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_ControlMeta proto.InternalMessageInfo

func (m *TraceEvent_ControlMeta) GetIhave() []*TraceEvent_ControlIHaveMeta {
	if m != nil {
		return m.Ihave
	}
	return nil
}

func (m *TraceEvent_ControlMeta) GetIwant() []*TraceEvent_ControlIWantMeta {
	if m != nil {
		return m.Iwant
	}
	return nil
}

func (m *TraceEvent_ControlMeta) GetGraft() []*TraceEvent_ControlGraftMeta {
	if m != nil {
		return m.Graft
	}
	return nil
}

func (m *TraceEvent_ControlMeta) GetPrune() []*TraceEvent_ControlPruneMeta {
	if m != nil {
		return m.Prune
	}
	return nil
}

type TraceEvent_ControlIHaveMeta struct {
	Topic                *string  `protobuf:"bytes,1,opt,name=topic" json:"topic,omitempty"`
	MessageIDs           [][]byte `protobuf:"bytes,2,rep,name=messageIDs" json:"messageIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceEvent_ControlIHaveMeta) Reset()         { *m = TraceEvent_ControlIHaveMeta{} }
func (m *TraceEvent_ControlIHaveMeta) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_ControlIHaveMeta) ProtoMessage()    {}
func (*TraceEvent_ControlIHaveMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 17}
}

func (m *TraceEvent_ControlIHaveMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_ControlIHaveMeta.Unmarshal(m, b)
}
func (m *TraceEvent_ControlIHaveMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_ControlIHaveMeta.Marshal(b, m, deterministic)
}
func (m *TraceEvent_ControlIHaveMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_ControlIHaveMeta.Merge(m, src)
}
func (m *TraceEvent_ControlIHaveMeta) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_ControlIHaveMeta.Size(m)
}
func (m *TraceEvent_ControlIHaveMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_ControlIHaveMeta.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_ControlIHaveMeta proto.InternalMessageInfo

func (m *TraceEvent_ControlIHaveMeta) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *TraceEvent_ControlIHaveMeta) GetMessageIDs() [][]byte {
	if m != nil {
		return m.MessageIDs
	}
	return nil
}

type TraceEvent_ControlIWantMeta struct {
	MessageIDs           [][]byte `protobuf:"bytes,1,rep,name=messageIDs" json:"messageIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceEvent_ControlIWantMeta) Reset()         { *m = TraceEvent_ControlIWantMeta{} }
func (m *TraceEvent_ControlIWantMeta) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_ControlIWantMeta) ProtoMessage()    {}
func (*TraceEvent_ControlIWantMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 18}
}

func (m *TraceEvent_ControlIWantMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_ControlIWantMeta.Unmarshal(m, b)
}
func (m *TraceEvent_ControlIWantMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_ControlIWantMeta.Marshal(b, m, deterministic)
}
func (m *TraceEvent_ControlIWantMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_ControlIWantMeta.Merge(m, src)
}
func (m *TraceEvent_ControlIWantMeta) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_ControlIWantMeta.Size(m)
}
func (m *TraceEvent_ControlIWantMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_ControlIWantMeta.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_ControlIWantMeta proto.InternalMessageInfo

func (m *TraceEvent_ControlIWantMeta) GetMessageIDs() [][]byte {
	if m != nil {
		return m.MessageIDs
	}
	return nil
}

type TraceEvent_ControlGraftMeta struct {
	Topic                *string  `protobuf:"bytes,1,opt,name=topic" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceEvent_ControlGraftMeta) Reset()         { *m = TraceEvent_ControlGraftMeta{} }
func (m *TraceEvent_ControlGraftMeta) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_ControlGraftMeta) ProtoMessage()    {}
func (*TraceEvent_ControlGraftMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 19}
}

func (m *TraceEvent_ControlGraftMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_ControlGraftMeta.Unmarshal(m, b)
}
func (m *TraceEvent_ControlGraftMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_ControlGraftMeta.Marshal(b, m, deterministic)
}
func (m *TraceEvent_ControlGraftMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_ControlGraftMeta.Merge(m, src)
}
func (m *TraceEvent_ControlGraftMeta) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_ControlGraftMeta.Size(m)
}
func (m *TraceEvent_ControlGraftMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_ControlGraftMeta.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_ControlGraftMeta proto.InternalMessageInfo

func (m *TraceEvent_ControlGraftMeta) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

type TraceEvent_ControlPruneMeta struct {
	Topic                *string  `protobuf:"bytes,1,opt,name=topic" json:"topic,omitempty"`
	Peers                [][]byte `protobuf:"bytes,2,rep,name=peers" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceEvent_ControlPruneMeta) Reset()         { *m = TraceEvent_ControlPruneMeta{} }
func (m *TraceEvent_ControlPruneMeta) String() string { return proto.CompactTextString(m) }
func (*TraceEvent_ControlPruneMeta) ProtoMessage()    {}
func (*TraceEvent_ControlPruneMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0, 20}
}

func (m *TraceEvent_ControlPruneMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEvent_ControlPruneMeta.Unmarshal(m, b)
}
func (m *TraceEvent_ControlPruneMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEvent_ControlPruneMeta.Marshal(b, m, deterministic)
}
func (m *TraceEvent_ControlPruneMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEvent_ControlPruneMeta.Merge(m, src)
}
func (m *TraceEvent_ControlPruneMeta) XXX_Size() int {
	return xxx_messageInfo_TraceEvent_ControlPruneMeta.Size(m)
}
func (m *TraceEvent_ControlPruneMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEvent_ControlPruneMeta.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEvent_ControlPruneMeta proto.InternalMessageInfo

func (m *TraceEvent_ControlPruneMeta) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *TraceEvent_ControlPruneMeta) GetPeers() [][]byte {
	if m != nil {
		return m.Peers
	}
	return nil
}

type TraceEventBatch struct {
	Batch                []*TraceEvent `protobuf:"bytes,1,rep,name=batch" json:"batch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TraceEventBatch) Reset()         { *m = TraceEventBatch{} }
func (m *TraceEventBatch) String() string { return proto.CompactTextString(m) }
func (*TraceEventBatch) ProtoMessage()    {}
func (*TraceEventBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{1}
}

func (m *TraceEventBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceEventBatch.Unmarshal(m, b)
}
func (m *TraceEventBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceEventBatch.Marshal(b, m, deterministic)
}
func (m *TraceEventBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceEventBatch.Merge(m, src)
}
func (m *TraceEventBatch) XXX_Size() int {
	return xxx_messageInfo_TraceEventBatch.Size(m)
}
func (m *TraceEventBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceEventBatch.DiscardUnknown(m)
}

var xxx_messageInfo_TraceEventBatch proto.InternalMessageInfo

func (m *TraceEventBatch) GetBatch() []*TraceEvent {
	if m != nil {
		return m.Batch
	}
	return nil
}

func init() {
	proto.RegisterEnum("pubsub.pb.TraceEvent_Type", TraceEvent_Type_name, TraceEvent_Type_value)
	proto.RegisterType((*TraceEvent)(nil), "pubsub.pb.TraceEvent")
	proto.RegisterType((*TraceEvent_PublishMessage)(nil), "pubsub.pb.TraceEvent.PublishMessage")
	proto.RegisterType((*TraceEvent_RejectMessage)(nil), "pubsub.pb.TraceEvent.RejectMessage")
	proto.RegisterType((*TraceEvent_DuplicateMessage)(nil), "pubsub.pb.TraceEvent.DuplicateMessage")
	proto.RegisterType((*TraceEvent_DeliverMessage)(nil), "pubsub.pb.TraceEvent.DeliverMessage")
	proto.RegisterType((*TraceEvent_AddPeer)(nil), "pubsub.pb.TraceEvent.AddPeer")
	proto.RegisterType((*TraceEvent_RemovePeer)(nil), "pubsub.pb.TraceEvent.RemovePeer")
	proto.RegisterType((*TraceEvent_RecvRPC)(nil), "pubsub.pb.TraceEvent.RecvRPC")
	proto.RegisterType((*TraceEvent_SendRPC)(nil), "pubsub.pb.TraceEvent.SendRPC")
	proto.RegisterType((*TraceEvent_DropRPC)(nil), "pubsub.pb.TraceEvent.DropRPC")
	proto.RegisterType((*TraceEvent_Join)(nil), "pubsub.pb.TraceEvent.Join")
	proto.RegisterType((*TraceEvent_Leave)(nil), "pubsub.pb.TraceEvent.Leave")
	proto.RegisterType((*TraceEvent_Graft)(nil), "pubsub.pb.TraceEvent.Graft")
	proto.RegisterType((*TraceEvent_Prune)(nil), "pubsub.pb.TraceEvent.Prune")
	proto.RegisterType((*TraceEvent_RPCMeta)(nil), "pubsub.pb.TraceEvent.RPCMeta")
	proto.RegisterType((*TraceEvent_MessageMeta)(nil), "pubsub.pb.TraceEvent.MessageMeta")
	proto.RegisterType((*TraceEvent_SubMeta)(nil), "pubsub.pb.TraceEvent.SubMeta")
	proto.RegisterType((*TraceEvent_ControlMeta)(nil), "pubsub.pb.TraceEvent.ControlMeta")
	proto.RegisterType((*TraceEvent_ControlIHaveMeta)(nil), "pubsub.pb.TraceEvent.ControlIHaveMeta")
	proto.RegisterType((*TraceEvent_ControlIWantMeta)(nil), "pubsub.pb.TraceEvent.ControlIWantMeta")
	proto.RegisterType((*TraceEvent_ControlGraftMeta)(nil), "pubsub.pb.TraceEvent.ControlGraftMeta")
	proto.RegisterType((*TraceEvent_ControlPruneMeta)(nil), "pubsub.pb.TraceEvent.ControlPruneMeta")
	proto.RegisterType((*TraceEventBatch)(nil), "pubsub.pb.TraceEventBatch")
}

func init() { proto.RegisterFile("trace.proto", fileDescriptor_0571941a1d628a80) }

var fileDescriptor_0571941a1d628a80 = []byte{
	// 1014 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x96, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0xc7, 0x4b, 0x7d, 0x98, 0xd2, 0x48, 0x96, 0xd9, 0x6d, 0xd3, 0x12, 0x6a, 0x52, 0xa8, 0x6e,
	0x10, 0x08, 0x28, 0x20, 0x20, 0x06, 0x8a, 0x1c, 0x9a, 0x04, 0x55, 0x44, 0xc6, 0x96, 0x21, 0xdb,
	0xc4, 0x48, 0x76, 0x8f, 0x2e, 0x25, 0x6d, 0x6d, 0x06, 0x12, 0x49, 0x90, 0x2b, 0x15, 0xc9, 0xbd,
	0x4f, 0xd1, 0x17, 0xea, 0xad, 0x0f, 0xd1, 0x17, 0x29, 0x76, 0x97, 0xa4, 0x44, 0x99, 0x64, 0xdc,
	0xc2, 0xc8, 0x8d, 0xb3, 0xfc, 0xff, 0x66, 0x67, 0x67, 0x67, 0x86, 0x84, 0x06, 0x0b, 0xec, 0x19,
	0xed, 0xf9, 0x81, 0xc7, 0x3c, 0x52, 0xf7, 0x57, 0xd3, 0x70, 0x35, 0xed, 0xf9, 0xd3, 0xc3, 0x7f,
	0xbe, 0x06, 0x98, 0xf0, 0x57, 0xe6, 0x9a, 0xba, 0x8c, 0xf4, 0xa0, 0xc2, 0xde, 0xfb, 0x54, 0x57,
	0x3a, 0x4a, 0xb7, 0x75, 0xd4, 0xee, 0x25, 0xc2, 0xde, 0x46, 0xd4, 0x9b, 0xbc, 0xf7, 0x29, 0x0a,
	0x1d, 0xf9, 0x0a, 0xf6, 0x7c, 0x4a, 0x83, 0xa1, 0xa1, 0x97, 0x3a, 0x4a, 0xb7, 0x89, 0x91, 0x45,
	0x1e, 0x43, 0x9d, 0x39, 0x4b, 0x1a, 0x32, 0x7b, 0xe9, 0xeb, 0xe5, 0x8e, 0xd2, 0x2d, 0xe3, 0x66,
	0x81, 0x8c, 0xa0, 0xe5, 0xaf, 0xa6, 0x0b, 0x27, 0xbc, 0x3d, 0xa3, 0x61, 0x68, 0xdf, 0x50, 0xbd,
	0xd2, 0x51, 0xba, 0x8d, 0xa3, 0xa7, 0xd9, 0xfb, 0x59, 0x29, 0x2d, 0xee, 0xb0, 0x64, 0x08, 0xfb,
	0x01, 0x7d, 0x47, 0x67, 0x2c, 0x76, 0x56, 0x15, 0xce, 0xbe, 0xcf, 0x76, 0x86, 0xdb, 0x52, 0x4c,
	0x93, 0x04, 0x41, 0x9b, 0xaf, 0xfc, 0x85, 0x33, 0xb3, 0x19, 0x8d, 0xbd, 0xed, 0x09, 0x6f, 0xcf,
	0xb2, 0xbd, 0x19, 0x3b, 0x6a, 0xbc, 0xc3, 0xf3, 0xc3, 0xce, 0xe9, 0xc2, 0x59, 0xd3, 0x20, 0xf6,
	0xa8, 0x16, 0x1d, 0xd6, 0x48, 0x69, 0x71, 0x87, 0x25, 0x2f, 0x40, 0xb5, 0xe7, 0x73, 0x8b, 0xd2,
	0x40, 0xaf, 0x09, 0x37, 0x4f, 0xb2, 0xdd, 0xf4, 0xa5, 0x08, 0x63, 0x35, 0xf9, 0x19, 0x20, 0xa0,
	0x4b, 0x6f, 0x4d, 0x05, 0x5b, 0x17, 0x6c, 0x27, 0x2f, 0x45, 0xb1, 0x0e, 0xb7, 0x18, 0xbe, 0x75,
	0x40, 0x67, 0x6b, 0xb4, 0x06, 0x3a, 0x14, 0x6d, 0x8d, 0x52, 0x84, 0xb1, 0x9a, 0x83, 0x21, 0x75,
	0xe7, 0x1c, 0x6c, 0x14, 0x81, 0x63, 0x29, 0xc2, 0x58, 0xcd, 0xc1, 0x79, 0xe0, 0xf9, 0x1c, 0x6c,
	0x16, 0x81, 0x86, 0x14, 0x61, 0xac, 0xe6, 0x65, 0xfc, 0xce, 0x73, 0x5c, 0x7d, 0x5f, 0x50, 0x39,
	0x65, 0x7c, 0xea, 0x39, 0x2e, 0x0a, 0x1d, 0x79, 0x0e, 0xd5, 0x05, 0xb5, 0xd7, 0x54, 0x6f, 0x09,
	0xe0, 0x9b, 0x6c, 0x60, 0xc4, 0x25, 0x28, 0x95, 0x1c, 0xb9, 0x09, 0xec, 0xdf, 0x98, 0x7e, 0x50,
	0x84, 0x1c, 0x73, 0x09, 0x4a, 0x25, 0x47, 0xfc, 0x60, 0xe5, 0x52, 0x5d, 0x2b, 0x42, 0x2c, 0x2e,
	0x41, 0xa9, 0x6c, 0xff, 0x0a, 0xad, 0x74, 0xf5, 0xf3, 0xce, 0x5a, 0xca, 0xc7, 0xa1, 0x21, 0xda,
	0xb4, 0x89, 0x9b, 0x05, 0xde, 0x8f, 0xcc, 0xf3, 0x9d, 0x59, 0xa8, 0x97, 0x3a, 0xe5, 0x6e, 0x1d,
	0x23, 0x8b, 0xe8, 0xa0, 0x2e, 0xc3, 0x9b, 0xb1, 0xf3, 0x81, 0xea, 0xe5, 0x4e, 0xa9, 0x5b, 0xc6,
	0xd8, 0x6c, 0xff, 0xa9, 0xc0, 0x7e, 0xaa, 0x27, 0x3e, 0xb2, 0xc3, 0x21, 0x34, 0x03, 0x3a, 0xa3,
	0xce, 0x9a, 0xce, 0xdf, 0x06, 0xde, 0x32, 0xea, 0xfb, 0xd4, 0x1a, 0x8f, 0x22, 0xa0, 0x76, 0xe8,
	0xb9, 0xa2, 0xf5, 0xeb, 0x18, 0x59, 0x5b, 0xd1, 0x55, 0xf2, 0xa2, 0xab, 0xa6, 0xa3, 0x5b, 0x80,
	0xb6, 0xdb, 0x62, 0x0f, 0x13, 0x5f, 0x14, 0x47, 0x79, 0x3b, 0x0e, 0x9e, 0xed, 0x74, 0xfb, 0x3d,
	0x78, 0xb6, 0x5f, 0x80, 0x1a, 0x75, 0xe6, 0xd6, 0xe8, 0x54, 0x52, 0xa3, 0xf3, 0x4b, 0x5e, 0x25,
	0x1e, 0xf3, 0x44, 0xe4, 0x75, 0x94, 0x46, 0xfb, 0x29, 0xc0, 0xa6, 0x2d, 0xf3, 0xd8, 0xf6, 0x07,
	0x50, 0xa3, 0xee, 0xbb, 0x93, 0x07, 0x25, 0x23, 0x0f, 0xcf, 0xa1, 0xb2, 0xa4, 0xcc, 0x16, 0x3b,
	0xe5, 0xb7, 0xb3, 0x35, 0x38, 0xa3, 0xcc, 0x46, 0x21, 0x2d, 0x38, 0x9a, 0x0b, 0x6a, 0xd4, 0xc0,
	0x3c, 0x3c, 0xde, 0xc2, 0x13, 0x2f, 0x0e, 0x4f, 0x5a, 0x0f, 0xbe, 0x5f, 0xd4, 0xf7, 0x9f, 0x66,
	0xbf, 0xc7, 0x50, 0xe1, 0x13, 0x83, 0xdf, 0x8f, 0xb8, 0x66, 0xb1, 0x57, 0x1d, 0xa5, 0xd1, 0x7e,
	0x02, 0x55, 0x31, 0x1e, 0x36, 0xaf, 0x4b, 0xdb, 0xaf, 0x7f, 0x84, 0xaa, 0x18, 0x05, 0x45, 0xb7,
	0x9e, 0x8d, 0x89, 0x71, 0xf0, 0x1f, 0xb1, 0xbf, 0x14, 0x50, 0xa3, 0x63, 0x91, 0x57, 0x50, 0x8b,
	0x0a, 0x36, 0xd4, 0x95, 0x4e, 0xb9, 0xdb, 0x38, 0xfa, 0x2e, 0x3b, 0x0f, 0x51, 0xc9, 0x8b, 0x5c,
	0x24, 0x08, 0xe9, 0x43, 0x33, 0x5c, 0x4d, 0xc3, 0x59, 0xe0, 0xf8, 0xcc, 0xf1, 0x5c, 0x51, 0xe8,
	0xf9, 0x03, 0x7c, 0x35, 0x15, 0x78, 0x0a, 0x21, 0x3f, 0x81, 0x3a, 0xf3, 0x5c, 0x16, 0x78, 0x0b,
	0x31, 0x0e, 0x72, 0x03, 0x18, 0x48, 0x91, 0xf0, 0x10, 0x13, 0xed, 0x01, 0x34, 0xb6, 0x02, 0xfb,
	0x7f, 0xfd, 0xd8, 0x7e, 0x05, 0x6a, 0x14, 0x1a, 0x77, 0x10, 0x05, 0x37, 0x95, 0x7f, 0x39, 0x35,
	0xdc, 0x2c, 0xe4, 0xa4, 0xf3, 0x8f, 0x12, 0x34, 0xb6, 0x82, 0x23, 0x2f, 0xa1, 0xea, 0xdc, 0xf2,
	0xaf, 0x85, 0xcc, 0xe7, 0xb3, 0xc2, 0xe3, 0x0c, 0x4f, 0xec, 0xb5, 0x4c, 0xaa, 0x84, 0x04, 0xfd,
	0xbb, 0xed, 0xb2, 0x28, 0x95, 0x1f, 0xa1, 0x7f, 0xb1, 0x5d, 0x16, 0xd1, 0x1c, 0xe2, 0xb4, 0xfc,
	0xec, 0x94, 0xef, 0x41, 0x8b, 0x92, 0x93, 0xb4, 0xfc, 0x02, 0xbd, 0x8c, 0xbf, 0x40, 0x95, 0x7b,
	0xd0, 0xa2, 0xf2, 0x24, 0x2d, 0x3f, 0x46, 0x27, 0xa0, 0xed, 0x1e, 0x2a, 0xbb, 0x1b, 0xc8, 0xb7,
	0x00, 0xc9, 0xad, 0xc8, 0xcb, 0x68, 0xe2, 0xd6, 0x4a, 0xfb, 0x68, 0xe3, 0x29, 0x3e, 0xe0, 0x0e,
	0xa3, 0xdc, 0x61, 0xba, 0x09, 0x93, 0x1c, 0x2b, 0xa7, 0x17, 0x5f, 0x27, 0xca, 0xe4, 0x08, 0x39,
	0x71, 0xf2, 0x59, 0x4b, 0x69, 0x10, 0x87, 0x28, 0x8d, 0xc3, 0xbf, 0x15, 0xa8, 0xf0, 0x7f, 0x5c,
	0xf2, 0x05, 0x1c, 0x58, 0x97, 0x6f, 0x46, 0xc3, 0xf1, 0xc9, 0xf5, 0x99, 0x39, 0x1e, 0xf7, 0x8f,
	0x4d, 0xed, 0x33, 0x42, 0xa0, 0x85, 0xe6, 0xa9, 0x39, 0x98, 0x24, 0x6b, 0x0a, 0x79, 0x04, 0x9f,
	0x1b, 0x97, 0xd6, 0x68, 0x38, 0xe8, 0x4f, 0xcc, 0x64, 0xb9, 0xc4, 0x79, 0xc3, 0x1c, 0x0d, 0xaf,
	0x4c, 0x4c, 0x16, 0xcb, 0xa4, 0x09, 0xb5, 0xbe, 0x61, 0x5c, 0x5b, 0xa6, 0x89, 0x5a, 0x85, 0x1c,
	0x40, 0x03, 0xcd, 0xb3, 0x8b, 0x2b, 0x53, 0x2e, 0x54, 0xf9, 0x6b, 0x34, 0x07, 0x57, 0xd7, 0x68,
	0x0d, 0xb4, 0x3d, 0x6e, 0x8d, 0xcd, 0x73, 0x43, 0x58, 0x2a, 0xb7, 0x0c, 0xbc, 0xb0, 0x84, 0x55,
	0x23, 0x35, 0xa8, 0x9c, 0x5e, 0x0c, 0xcf, 0xb5, 0x3a, 0xa9, 0x43, 0x75, 0x64, 0xf6, 0xaf, 0x4c,
	0x0d, 0xf8, 0xe3, 0x31, 0xf6, 0xdf, 0x4e, 0xb4, 0x06, 0x7f, 0xb4, 0xf0, 0xf2, 0xdc, 0xd4, 0x9a,
	0x87, 0xaf, 0xe1, 0x60, 0x73, 0xbf, 0x6f, 0x6c, 0x36, 0xbb, 0x25, 0x3f, 0x40, 0x75, 0xca, 0x1f,
	0xa2, 0x22, 0x7e, 0x94, 0x59, 0x0a, 0x28, 0x35, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xce, 0x47,
	0x1f, 0x67, 0x3e, 0x0c, 0x00, 0x00,
}
